name: Build and deploy barati.dev

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      generate_pdf:
        description: 'Regenerate PDF resume?'
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Generate PDF Resume
        if: ${{ github.event.inputs.generate_pdf == 'true' || github.event_name == 'push' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          npm install puppeteer
          # Debug directory contents
          echo "Contents of _site directory:"
          ls -la _site
          echo "Contents of assets directory:"
          ls -la assets
          # Generate PDF
          node assets/js/generate-pdf.js
          # Ensure PDF is copied to the right location
          mkdir -p _site/assets
          cp assets/BM_resume.pdf _site/assets/
          # Verify PDF was created
          ls -la _site/assets/BM_resume.pdf

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
